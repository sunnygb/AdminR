<%@ Template Language="C#" TargetLanguage="C#" Debug="True" Encoding="UTF-8" %>

<%@ Assembly Src="Model.cs" %>
<%@ Assembly Src="Extensions.cs" %>

<%@ Import Namespace="System.Collections.Generic" %>
<%@ Import Namespace="System.Linq" %>
<%@ Import Namespace="System.Text" %>
<%@ Import Namespace="System.Text.RegularExpressions" %>

<%@ Import Namespace="SchemaMapper" %>

<%@ Property Name="Entity"
             Type="SchemaMapper.Entity"  %>
<%@ Property Name="EntityContext"
             Type="SchemaMapper.EntityContext"  %>

<%@ Property Name="EntityNamespace"
             Type="System.String"  %>
using System;
using System.Collections.Generic;
using System.Data.SQLite;
using <%=EntityNamespace%>.Services;
using Dapper;
using System.Text;
using System.Transactions;
using System.Linq;

namespace <%= EntityNamespace%>.Repository
{    
    public class <%= Entity.ClassName%>Repository : I<%= Entity.ClassName%>Repository 
    {

       <%=Entity.ClassName%> Add(<%=Entity.ClassName%> <%=Entity.ClassName.ToLower()%>)
       {
          throw new NotImplementedException();
       
       }
       
       List< <%=Entity.ClassName %>> GetAll()
       {
          throw new NotImplementedException();
       
       }
       
       <%=Entity.ClassName%> Find(int id)
       {
          throw new NotImplementedException();
       
       }
       
       <%=Entity.ClassName%> Update(<%=Entity.ClassName%> <%=Entity.ClassName.ToLower()%>)
       {
          throw new NotImplementedException();
       
       }
       
       void Remove(int id)
       {
          throw new NotImplementedException();
       
       }
       
       <%=Entity.ClassName%> GetAllWithChildren(int id)
       {
          throw new NotImplementedException();
       
       }
       
       void Save(<%=Entity.ClassName%> <%=Entity.ClassName.ToLower()%>)
       {
          throw new NotImplementedException();
       
       }
   
    }
}
<script runat="template">


</script>