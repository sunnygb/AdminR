//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System.ComponentModel;

namespace AdmissionAndResult.Model.Wrapper
{
    using System;
    using System.Collections.Generic;
    using Dapper;
    using Dapper.Contrib.Extensions;
    using AdmissionAndResult.Model;
    [Table("Selected_Student")]
  class SelectedStudentW : IDataErrorInfo
    {
        public SelectedStudentW (SelectedStudent selectedStudent)
         {
             this.Selected_Student_Id = selectedStudent.Selected_Student_Id;
             this.Student_Registeration_Number = selectedStudent.Student_Registeration_Number;
             this.Aggregate = selectedStudent.Aggregate;
             this.Cource_Id = selectedStudent.Cource_Id;
             this.CGPA_Text = selectedStudent.CGPA_Text;
             this.SGPA = selectedStudent.SGPA;
             this.Department_ID = selectedStudent.Department_ID;
         }
        public SelectedStudentW()
        {

        }

        [Key]
        public long Selected_Student_Id { get; set; }
        [Key]
        public string Student_Registeration_Number { get; set; }
        public double Aggregate { get; set; }
        public long Cource_Id { get; set; }
        public string CGPA_Text { get; set; }
        public string SGPA { get; set; }
        public long Department_ID { get; set; }


        public string Error
        {
            get { throw new NotImplementedException(); }
        }
        public string this[string columnName]
        {
            get
            {
                switch (columnName)
                {

                    case "Student_Registeration_Number":
                        if (string.IsNullOrEmpty(Student_Registeration_Number))
                            return "Institute Name is required";
                        break;
                    case "Aggregate":
                        if (string.IsNullOrEmpty(Aggregate.ToString()))
                            return "Nts marks is required";
                        break;
                    case "Course_Id":
                        if (string.IsNullOrEmpty(Cource_Id.ToString()))
                            return "Nts marks is required";
                        break;
                }
                return "";
                }
            }

        }
    }
